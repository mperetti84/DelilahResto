openapi: 3.0.0
info:
  version: 1.0.0
  title: Delilah_Resto
  description: >-
    API de negocio de comidas, con loggin de usuarios y administradores, gestion de pedidos y gestion de productos. 
    Tercer trabajo practico de la carrera DWFS de Acamica.
    
paths:
  /users:
    get:
      tags:
        - Administrators
      description: Retorna listado de usuarios
      security:
        - delilaAuth: []
      responses:
        200:
          description: lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/fullUser"
        400:
          description: error obteniendo lista de usuarios
          content:
            application/json:
              schema: 
                type: string

  /users/check:
    get:
      tags:
        - Users
      description: Retorna informacion del propio usuario
      security:
        - delilaAuth: []
      responses:
        200:
          description: lista de usuarios
          content:
            application/json:
              schema:
                type: object
                items:
                  allOf:
                    - $ref: "#/components/schemas/user"
        400:
          description: error obteniendo informacion de usuario
          content:
            application/json:
              schema: 
                type: string

  /users/check/{userId}:
    get:
      tags:
        - Administrators
      description: Retorna informacion de un usuario en particular
      security:
        - delilaAuth: []
      parameters:
          - in: path
            name: userId
            schema:
              type: integer
            required: true
      responses:
        200:
          description: informacion de usuario
          content:
            application/json:
              schema:
                type: object
                items:
                  allOf:
                    - $ref: "#/components/schemas/user"
        400:
          description: error obteniendo informacion de usuario
          content:
            application/json:
              schema: 
                type: string

  /users/modify/{userId}:
    put:  
      tags:
          - Administrators 
      description: editar usuario (Admin)
      security:
        - delilaAuth: []
      parameters:
          - in: path
            name: userId
            schema:
              type: integer
            required: true
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                allOf:
                    - $ref: "#/components/schemas/bodyUser"
      responses:
        200:
          description: informacion de usuario actualizada
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/user"
        400:
          description: error editando informacion de usuario
          content:
            application/json:
              schema: 
                type: string

  /users/modify:
    put:  
      tags:
          - Users
      description: editar usuario propio (User)
      security:
        - delilaAuth: []
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/bodyUser"
      responses:
        200:
          description: informacion de usuario actualizada
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/user"
        400:
          description: error editando informacion de usuario
          content:
            application/json:
              schema: 
                type: string

  /users/sign: 
    post:
      tags:
          - Administrators
          - Users
      description: crear nuevo usuario
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/bodyUser"
      responses:
        200:
          description: usuario insertado correctamente en tabla users
          content:
            application/json:
              schema:
                type: object
                properties:
                    products: 
                      type: array
                      items:
                          allOf:
                            -       $ref: "#/components/schemas/product"
                    token:
                      type: string 
        400:
          description: error registrando usuario
          content:
            application/json:
              schema: 
                type: string

  /users/login: 
    post:
      tags:
          - Administrators
          - Users
      description: loggeo de usuario existente
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                properties:
                  userName:
                    type: string
                  pass:
                    type: string
      responses:
        200:
          description: usuario loggeado con exito
          content:
            application/json:
              schema:
                type: object
                properties:
                    products: 
                      type: array
                      items:
                          allOf:
                            -       $ref: "#/components/schemas/product"
                    favorites:
                      type: array
                      items:
                          allOf:
                            -       $ref: "#/components/schemas/product"
                    token:
                      type: string
        400:
          description: error loggeando usuario
          content:
            application/json:
              schema: 
                type: string

  /users/addPaymentMethod: 
    post:
      tags:
          - Users
      description: post para agregar nueva tarjeta de credito/debito
      security:
        - delilaAuth: []
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/bodyPaymentInfo"
      responses:
        200:
          description: usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  card_type:
                    type: string
                  exp_date:
                    type: string
        400:
          description: error agregando forma de pago
          content:
            application/json:
              schema: 
                type: string

  /users/delete/{userId}:
    put:  
      tags:
          - Administrators 
      description: elimina usuario (Admin)
      security:
        - delilaAuth: []
      parameters:
          - in: path
            name: userId
            schema:
              type: integer
            required: true
      responses:
        200:
          description: mensaje de usuario eliminado con exito
          content:
            application/json:
              schema:
                type: string
        400:
          description: error eliminando usuario
          content:
            application/json:
              schema: 
                type: string

  /orders: 
    get:
      tags:
          - Administrators
      description: ver todas las ordenes existentes
      security:
        - delilaAuth: []
      responses:
        200:
          description: listado de todas las ordenes de todos los usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                    allOf:
                      - $ref: "#/components/schemas/fullOrder"
        400:
          description: error obteniendo listado de ordenes
          content:
            application/json:
              schema: 
                type: string

    post:
      tags:
          - Users 
      description: post para generar nuevo pedido. Si el paymentType es "cash", no es necesario ingresar paymentId ni secCode. 
      security:
        - delilaAuth: []
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/bodyOrder"
      responses:
        200:
          description: se devuelve orden ingresada con exito
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/order"
        400:
          description: error insertando orden
          content:
            application/json:
              schema: 
                type: string

  /orders/check/{orderId}:   
    get:
      tags:
          - Administrators
      description: ver el estado de un pedido en particular (ejecuta Admin)
      security:
        - delilaAuth: []
      parameters:
        - in: path
          name: orderId
          schema:
            type: integer
          required: true
      responses:
        200:
          description: orden a verificar
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/fullOrder"
        400:
          description: error revisando orden
          content:
            application/json:
              schema: 
                type: string

  /orders/check:   
    get:
      tags:
          - Users
      description: ver el estado de las ordenes activas del propio usuario
      security:
        - delilaAuth: []
      responses:
        200:
          description: orden a verificar
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/order"
        400:
          description: error revisando orden
          content:
            application/json:
              schema: 
                type: string
  
  /orders/{orderId}:
    put:
      tags:
          - Administrators
      description: modificar el estado de un pedido en particular
      security:
        - delilaAuth: []
      parameters:
        - in: path
          name: orderId
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                properties:
                    state:
                      type: string
                      enum: [nuevo, confirmado, preparando, enviando, cancelado, entregado]
                      description: estado de la orden
      responses:
        200:
          description: orden actualizada
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/order"
        400:
          description: error actualizando orden
          content:
            application/json:
              schema: 
                type: string
  
  /orders/delete/{orderId}:
    put:
      tags:
          - Administrators
      description: eliminar un pedido en particular
      security:
        - delilaAuth: []
      parameters:
        - in: path
          name: orderId
          schema:
            type: integer
          required: true
      responses:
        200:
          description: mensaje de pedido eliminado con exito
          content:
            application/json:
              schema:
                type: string
        400:
          description: error actualizando orden
          content:
            application/json:
              schema: 
                type: string

  /products: 
    get:
      tags:
          - Administrators
          - Users
      description: ver listado de productos
      responses:
        200:
          description: listado de productos disponibles
          content:
            application/json:
              schema:
                type: array
                items:
                    allOf:
                      - $ref: "#/components/schemas/product"
        400:
          description: error listando productos
          content:
            application/json:
              schema: 
                type: string
    
    post:
      tags:
          - Administrators
      description: agregar nuevo producto
      security:
        - delilaAuth: []
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/bodyProduct"
      responses:
        200:
          description: nuevo producto agregado
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/product"
        400:
          description: error insertando producto
          content:
            application/json:
              schema: 
                type: string

  /products/{productId}: 
    get:
      tags:
          - Administrators
          - Users
      description: ver producto en particular
      parameters:
        - in: path
          name: productId
          schema:
            type: integer
          required: true
      responses:
        200:
          description: producto a revisar
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/product"
        400:
          description: error revisando producto
          content:
            application/json:
              schema: 
                type: string
    
    put:
      tags:
          - Administrators
      description: modificar producto en particular
      security:
        - delilaAuth: []
      parameters:
        - in: path
          name: productId
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/bodyProduct"
      responses:
        200:
          description: producto actualizado
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/product"
        400:
          description: error actualizando producto
          content:
            application/json:
              schema: 
                type: string

  /products/delete/{productId}:
    put:  
      tags:
          - Administrators 
      description: elimina producto (Admin)
      security:
        - delilaAuth: []
      parameters:
          - in: path
            name: productId
            schema:
              type: integer
            required: true
      responses:
        200:
          description: mensaje de producto eliminado con exito
          content:
            application/json:
              schema:
                type: string
        400:
          description: error eliminando producto
          content:
            application/json:
              schema: 
                type: string
  
components:
  schemas:
    fullUser:
      properties:
        userId:
          type: string
          description: id unico de usuario
        userName:
          type: string
          description: nombre de usuario
        fullName:
          type: string
          description: nombre y apellido del usuario
        email:
          type: string
          description: email de usuario
        pass:
          type: string
          description: passcowrd de acceso de usuario
        address:
          type: string
          description: direccion de vivienda de usuario
        phone:
          type: string
          description: telefono de usuario
        created:
          type: string
          description: fecha de creacion
        modified:
          type: string
          description: fecha de ultima edicion
        admin:
          type: boolean
          description: detalla si user es admin o no
        activer:
          type: boolean
          description: detalla si el usuario esta activo o dio de baja su cuenta
    
    user:
      properties:
        id:
          type: string
          description: id unico de usuario
        userName:
          type: string
          description: nombre de usuario
        fullName:
          type: string
          description: nombre y apellido del usuario
        email:
          type: string
          description: email de usuario
        pass:
          type: string
          description: passcowrd de acceso de usuario
        address:
          type: string
          description: direccion de vivienda de usuario
        phone:
          type: string
          description: telefono de usuario
    
    bodyUser:
      properties:
        userName:
          type: string
          description: nombre de usuario
        fullName:
          type: string
          description: nombre y apellido del usuario
        email:
          type: string
          description: email de usuario
        pass:
          type: string
          description: passcowrd de acceso de usuario
        address:
          type: string
          description: direccion de vivienda de usuario
        phone:
          type: string
          description: telefono de usuario
          
    product:
      properties:
        productId:
          type: string
          description: id unico de producto
        detail:
          type: string
          description: descripcion del producto
        price:
          type: number
          description: precio del producto
        photo:
          type: string
          description: foto del producto
        title:
          type: string
          description: nombre del producto
          
    bodyProduct:
      properties:
        detail:
          type: string
          description: descripcion del producto
        price:
          type: number
          description: precio del producto
        photo:
          type: string
          description: foto del producto
        title:
          type: string
          description: nombre del producto

    order:
      properties:
        orderId:
          type: string
          description: id unico de orden
        state:
          type: string
          enum: [nuevo, confirmado, preparando, enviando, cancelado, entregado]
          description: estado de la orden
        detail: 
          type: array 
          items:
            type: object
            properties:
                title:
                  description: titulo del producto
                  type: string
                photo:
                  description: url de foto del producto
                  type: string
                price:
                  description: precio del producto
                  type: integer
                quantity:
                  description: cantidad de productos
                  type: integer
          description: listado de objetos de la orden
        totalCost:
          type: number
          description: sumatoria de los precios de los productos
        paymentType:
          type: string
          enum: [cash, debit, credit]
          description: forma de pago de orden
        address:
          type: string
          description: direccion de entrega de la orden

    fullOrder:
      properties:
        orderId:
          type: string
          description: id unico de orden
        state:
          type: string
          enum: [nuevo, confirmado, preparando, enviando, cancelado, entregado]
          description: estado de la orden
        detail: 
          type: array 
          items:
            type: object
            properties:
                title:
                  description: titulo del producto
                  type: string
                photo:
                  description: url de foto del producto
                  type: string
                price:
                  description: precio del producto
                  type: integer
                quantity:
                  description: cantidad de productos
                  type: integer
          description: listado de objetos de la orden
        totalCost:
          type: number
          description: sumatoria de los precios de los productos
        paymentType:
          type: string
          enum: [cash, debit, credit]
          description: forma de pago de orden
        address:
          type: string
          description: direccion de entrega de la orden
        fullName:
          type: string
          description: nombre completo del usuario
        userName:
          type: string
          description: nombre de usuario
        email:
          type: string
          description: email del usuario
        phone:
          type: string
          description: telefono del usuario
      
    bodyOrder:
      properties:
        detail: 
            type: array 
            items:
              type: object
              properties:
                  productId:
                    description: id del producto
                    type: integer
                  quantity:
                    description: cantidad de productos
                    type: integer
            description: listado de objetos de la orden
        paymentType:
          type: string
          enum: [cash, debit, credit]
          description: forma de pago de orden, si se elige "cash" no es necesario paymentId ni secCode
        paymentId:
          type: number
          description: id de forma de pago
        secCode:
          type: number
          description: codigo de tarjeta
        address:
          type: string
          description: direccion de entrega de la orden
          
    bodyPaymentInfo:
      properties:
        cardType:
          type: string
          enum: [credit, debit]
          description: debito/credito
        cardNumber:
          type: number
          description: numero de tarjeta
        secCode:
          type: number
          description: codigo de tarjeta
        expDate:
          type: number
          description: fecha vencimiento de tarjeta

  securitySchemes:
    delilaAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT